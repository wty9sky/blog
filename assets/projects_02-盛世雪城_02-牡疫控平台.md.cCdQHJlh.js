import{_ as a,a as e,o as l,f as i}from"./chunks/framework.x10tvMrD.js";const m=JSON.parse('{"title":"牡丹江疫情防控管理平台","description":"","frontmatter":{"title":"牡丹江疫情防控管理平台","editLink":false,"lastUpdated":true,"showComment":false},"headers":[],"relativePath":"projects/02-盛世雪城/02-牡疫控平台.md","filePath":"projects/02-盛世雪城/02-牡疫控平台.md","lastUpdated":1712041835000}'),t={name:"projects/02-盛世雪城/02-牡疫控平台.md"},r=i('<h2 id="项目盘点" tabindex="-1">项目盘点 <a class="header-anchor" href="#项目盘点" aria-label="Permalink to &quot;项目盘点&quot;">​</a></h2><h3 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h3><p>针对 2020 年初在武汉爆发的新型冠状病毒疫情，牡丹江市政府和各社区通过本项目收集防疫人员隔离情况以及疫苗接种情况，并通过平台查询防疫数据并按照自定义格式动态导出上报，以及观察疫情数据与发展趋势展示。</p><h3 id="项目需求" tabindex="-1">项目需求 <a class="header-anchor" href="#项目需求" aria-label="Permalink to &quot;项目需求&quot;">​</a></h3><p>疫情初期，由于疫情发展速度迅速，需要与时间赛跑，需要缩短开发时间，帮助社区工作人员通过身份证扫描快速收集人员隔离情况，以及隔离阶段中每日体温检测上报等功能，需要在三天内完成上线功能并为社区管理员提供可线上查阅和下载当日数据的情况。</p><h3 id="项目选型" tabindex="-1">项目选型 <a class="header-anchor" href="#项目选型" aria-label="Permalink to &quot;项目选型&quot;">​</a></h3><p>因此初期为了能够快速响应防疫需求，通过线上视频会议敲定前端小程序使用 UniApp，后端使用 Serverless 的开发方案并快速落地；然后快速选择产品，通过对比文档，在腾讯云开发与知晓云两个产品中，选择了文档比较清晰的<a href="https://cloud.minapp.com/">知晓云</a>。</p><h3 id="做了哪些内容" tabindex="-1">做了哪些内容 <a class="header-anchor" href="#做了哪些内容" aria-label="Permalink to &quot;做了哪些内容&quot;">​</a></h3><ul><li>原生小程序开发，开发出简易的日历组件。</li><li>使用 ElementUI 实现管理端的开发。</li><li>使用 Serverless，实现后端功能，这也是第一次接触 Nodejs。</li></ul><h2 id="第一次重构" tabindex="-1">第一次重构 <a class="header-anchor" href="#第一次重构" aria-label="Permalink to &quot;第一次重构&quot;">​</a></h2><p>疫情稳定后，有关部门推出低中高风险地区的管理模式，为了相应这个管理模式，预估未来会有较大的数据量，知晓云现有付费方案无法满足实际需求和成本代价，加上有关部门要求疫情数据保密等，因此需要将数据迁移至有关部门提供的服务器，并增加对返乡人员的管理。</p><h3 id="重构思路" tabindex="-1">重构思路 <a class="header-anchor" href="#重构思路" aria-label="Permalink to &quot;重构思路&quot;">​</a></h3><p>通过对时间和实际需求的评估，选择了基于 Koa 开发后端，降低项目开发成本，并实现开发与使用文档，作为开发存档记录，便于后续复盘回顾。</p><h3 id="做了哪些内容-1" tabindex="-1">做了哪些内容 <a class="header-anchor" href="#做了哪些内容-1" aria-label="Permalink to &quot;做了哪些内容&quot;">​</a></h3><ul><li>使用 Uniapp 开发小程序，通过 Vue 开发跨端小程序，实现多平台小程序同步开发，提高开发效率。</li><li>使用 Koa 开发后端，并开发 Koa 的 CLI，实现微信相关接口、后端路由等自动化生成。</li><li>使用 Vuepress 实现技术开发文档和说明文档。</li></ul><h3 id="效果与反馈" tabindex="-1">效果与反馈 <a class="header-anchor" href="#效果与反馈" aria-label="Permalink to &quot;效果与反馈&quot;">​</a></h3><ul><li>第二次重构的方案为其他中小型项目的快速开发提供了路线，确定了公司内部针对中小型项目的解决方案。</li><li>开发 Koa 的 CI 模板，可选择性集成微信、Mysql、知晓云、微信云开发等，为后续项目提供了快速开发的模版。</li></ul><h2 id="第二次重构" tabindex="-1">第二次重构 <a class="header-anchor" href="#第二次重构" aria-label="Permalink to &quot;第二次重构&quot;">​</a></h2><p>2022 年是疫情第三年，新增了疫苗的需求，根据有关部门的需求，在保留原有功能的前提下，将新增业务需求合并为牡疫控平台，增加多个业务需求，包括人脸识别、身份证、驾照识别，颗粒化权限管理。</p><h3 id="做了哪些内容-2" tabindex="-1">做了哪些内容 <a class="header-anchor" href="#做了哪些内容-2" aria-label="Permalink to &quot;做了哪些内容&quot;">​</a></h3><ul><li>使用 RBAC 实现颗粒化权限管理。</li><li>后端技术栈升级为 Golang，重写过程中逐步对 Golang 的语法和开发有所理解。</li><li>使用 Echart 和 Threejs 实现大屏数据展示，为防疫部门提供了数据参考。</li></ul><h3 id="效果与反馈-1" tabindex="-1">效果与反馈 <a class="header-anchor" href="#效果与反馈-1" aria-label="Permalink to &quot;效果与反馈&quot;">​</a></h3><ul><li>为有关部门的疫情防疫提供了可靠稳定的平台，即使在多次核酸集采、疫苗集中接种、高速公路快速采集的大流量情况下，平台也未出现过异常浮动。</li><li>因牡丹江地区的防疫管控效率见好，后续又为绥芬河、宁安、黑河等城市提供了对应的疫情解决方案，并扩展了实时人脸体温检测的方案。</li><li>确定项目组协作流程，启用 Git 项目管理，搭建 Gitlab 平台，推动敏捷开发模式。</li><li>基于 ElementUI 和小程序开发组件，成为公司内部常用组件库，为后续项目提供方便快捷的操作。</li></ul><h2 id="项目总结" tabindex="-1">项目总结 <a class="header-anchor" href="#项目总结" aria-label="Permalink to &quot;项目总结&quot;">​</a></h2><ul><li>两次重构，每一次重构都是剧痛一样，功能代码基本上是重新写，重构周期短，任务重，项目负责人员只有三个人，独自一人承担前端与后端开发，基本都是挑战，但是每次挑战都能够顺利通过，也感谢杉哥对我的无条件信任和统筹，才能够让这个项目在疫情期间能够顺利的开发重构下去并且得到了有关部门的赞赏。</li><li>通过这个项目的三次开发流程，完成了从 Severless-&gt; Koa-&gt;Golang 的后端技术栈进化，让自己从纯前端开发扩展到可独立进行后端开发的全栈开发，并掌握了 Git、Docker 等技能。</li><li>比较可惜的是 Koa 的 CLI 和组件库没能开源出来。</li></ul>',25),o=[r];function h(n,s,d,c,u,p){return l(),e("div",null,o)}const b=a(t,[["render",h]]);export{m as __pageData,b as default};
